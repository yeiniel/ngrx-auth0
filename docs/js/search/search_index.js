var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/AuthService.html",[0,0.833,1,0.833]],["body/injectables/AuthService.html",[0,0.706,1,0.706,2,0.702,3,0.559,4,0.559,5,0.444,6,0.761,7,0.893,8,0.349,9,1.115,10,2.683,11,3.097,12,2.341,13,3.471,14,2.194,15,1.115,16,2.666,17,1.678,18,1.461,19,0.702,20,1.184,21,1.924,22,1.882,23,0.887,24,0.091,25,0.887,26,0.858,27,0.887,28,1.766,29,1.184,30,1.387,31,2.666,32,1.882,33,2.011,34,1.184,35,2.666,36,3.557,37,2.909,38,1.882,39,2.666,40,1.882,41,2.666,42,1.882,43,0.702,44,1.115,45,0.702,46,2.341,47,1.184,48,2.057,49,1.184,50,2.341,51,1.162,52,2.194,53,1.184,54,1.461,55,1.184,56,0.444,57,1.184,58,0.559,59,0.893,60,1.882,61,1.184,62,0.893,63,0.893,64,1.184,65,1.419,66,1.419,67,0.893,68,1.184,69,0.559,70,1.419,71,0.444,72,0.444,73,0.559,74,1.184,75,1.882,76,1.184,77,1.184,78,1.184,79,1.184,80,1.184,81,1.184,82,1.184,83,1.184,84,1.184,85,1.184,86,1.184,87,2.341,88,1.184,89,1.184,90,1.882,91,1.882,92,1.184,93,1.184,94,1.184,95,0.706,96,2.341,97,1.184,98,1.184,99,1.882,100,1.184,101,0.893,102,1.184,103,0.893,104,1.419,105,1.184,106,2.341,107,1.882,108,1.184,109,1.184,110,1.184,111,2.341,112,1.184,113,0.893,114,1.184,115,0.893,116,1.184,117,1.184,118,0.893,119,1.184,120,0.893,121,1.184,122,1.882,123,1.184,124,1.184,125,1.184,126,1.184,127,1.882,128,1.184,129,1.184,130,1.184,131,1.184,132,2.666,133,1.184,134,1.184,135,0.039,136,1.184,137,1.882,138,0.893,139,1.184,140,1.184,141,1.184,142,1.184,143,1.184,144,0.024,145,0.039]],["title/injectables/Effects.html",[0,0.833,146,0.833]],["body/injectables/Effects.html",[0,0.823,1,1.31,2,0.854,3,0.68,4,0.68,5,0.541,6,0.759,8,0.425,9,1.299,10,1.654,14,1.654,15,1.299,17,1.504,18,1.504,19,0.854,21,1.89,23,0.68,24,0.091,25,0.68,26,0.425,27,0.68,30,0.854,43,1.572,44,1.572,48,1.299,51,0.823,52,1.654,54,1.647,56,0.541,58,0.68,59,2.001,62,2.406,63,1.088,71,0.823,72,0.541,73,0.68,95,0.823,135,0.03,144,0.03,145,0.045,146,0.823,147,1.088,148,2.406,149,2.965,150,1.442,151,1.584,152,3.598,153,1.442,154,1.442,155,1.802,156,3.491,157,3.359,158,2.193,159,2.653,160,2.193,161,2.193,162,1.572,163,1.034,164,2.653,165,1.442,166,2.534,167,3.359,168,2.193,169,2.193,170,2.653,171,2.193,172,2.193,173,2.193,174,2.965,175,2.236,176,1.442,177,2.193,178,2.193,179,1.654,180,2.193,181,2.193,182,1.442,183,1.442,184,2.193,185,0.68,186,0.68,187,1.299,188,0.68,189,0.68,190,1.088,191,0.854,192,1.088,193,1.088]],["title/modules/NgrxAuth0Module.html",[194,0.833,195,1.047]],["body/modules/NgrxAuth0Module.html",[1,0.984,3,0.867,4,0.867,5,0.69,6,0.593,15,1.089,19,1.089,21,1.089,23,0.867,24,0.091,25,0.867,26,0.542,27,1.442,28,2.515,30,1.089,45,1.089,51,0.69,54,1.901,56,0.69,69,1.237,70,1.387,71,0.69,72,0.69,73,0.867,95,0.984,101,1.387,135,0.038,144,0.038,145,0.054,146,0.984,151,1.237,185,0.867,186,0.867,190,1.387,191,1.554,193,1.387,194,1.251,195,1.779,196,1.089,197,2.623,198,1.838,199,1.978,200,1.978,201,3.057,202,1.554,203,0.773,204,1.978,205,1.237,206,1.442,207,2.623,208,1.838,209,2.623,210,1.838,211,1.812,212,2.623,213,1.978,214,1.978,215,3.057,216,2.306,217,2.623,218,1.387,219,1.387,220,1.089,221,1.387,222,1.442,223,1.838,224,1.089,225,1.387,226,1.838,227,1.838,228,1.387,229,1.838,230,2.623,231,1.838,232,1.089,233,1.838,234,1.838,235,1.838,236,1.387]],["title/interfaces/State.html",[203,0.654,237,0.654]],["body/interfaces/State.html",[3,1.416,4,1.416,5,1.126,6,0.679,8,0.885,9,2.148,24,0.085,26,0.885,45,1.779,72,1.126,135,0.061,144,0.061,145,0.074,163,1.908,203,0.885,205,1.416,206,1.416,237,1.148,238,3.002,239,2.265,240,3.002,241,3.895]],["title/coverage.html",[242,2.254]],["body/coverage.html",[0,1.119,1,0.83,5,0.83,6,0.961,7,1.67,24,0.088,26,0.653,69,1.044,71,0.83,135,0.045,144,0.045,145,0.061,146,0.83,147,1.67,162,1.311,187,1.311,188,1.044,189,1.044,203,0.653,220,1.311,222,1.044,232,1.311,237,0.653,239,1.67,242,1.67,243,2.213,244,2.213,245,2.213,246,1.67,247,4.134,248,3.611,249,3.611,250,1.67,251,1.67,252,3.97,253,3.97,254,1.67,255,1.67,256,1.67,257,1.67,258,2.213,259,2.213,260,2.983,261,2.213,262,1.67,263,1.67,264,1.67,265,1.67,266,1.67,267,1.67,268,1.67,269,1.67,270,1.311,271,1.768,272,2.213,273,1.67,274,1.67,275,1.311,276,2.213,277,2.213,278,2.213]],["title/dependencies.html",[279,1.873,280,1.575]],["body/dependencies.html",[24,0.09,56,1.027,58,1.292,65,2.066,66,2.066,67,2.066,135,0.056,144,0.056,145,0.07,185,1.292,186,1.616,280,1.623,281,2.738,282,4.221,283,2.738,284,2.738,285,2.738,286,2.584,287,2.584,288,2.738,289,2.738,290,2.738,291,3.739,292,2.738,293,2.738,294,2.738,295,2.738,296,2.738,297,2.738]],["title/miscellaneous/functions.html",[298,0.884,299,2.005]],["body/miscellaneous/functions.html",[6,0.718,8,0.936,23,1.498,24,0.082,25,1.498,27,1.498,135,0.065,144,0.065,145,0.077,155,1.768,222,1.768,237,0.936,271,1.882,298,1.498,299,2.395,300,2.395,301,3.176]],["title/index.html",[8,0.552,302,1.873,303,1.873]],["body/index.html",[17,1.567,18,1.23,24,0.09,48,1.545,51,1.319,54,1.848,56,0.979,58,0.86,72,0.979,73,1.23,95,0.684,103,1.376,104,1.376,115,1.376,118,1.968,135,0.037,144,0.037,145,0.053,151,1.658,155,1.23,163,1.23,179,1.376,185,0.86,186,1.23,188,0.86,189,0.86,191,1.081,192,1.376,194,1.372,195,0.86,199,1.968,200,1.376,202,1.545,203,0.538,204,1.376,205,0.86,206,0.86,211,1.081,213,2.506,214,1.376,216,1.968,218,1.376,219,1.376,224,1.081,225,1.376,236,1.376,237,0.538,270,1.081,275,1.545,286,1.376,287,1.376,304,1.824,305,1.824,306,2.608,307,2.608,308,1.824,309,1.824,310,1.824,311,2.297,312,1.824,313,2.608,314,1.824,315,1.824,316,1.824,317,2.608,318,2.608,319,1.824,320,1.824,321,1.824,322,1.824,323,1.824,324,1.824,325,1.824,326,1.824,327,1.376,328,1.376,329,1.824,330,1.824,331,1.824,332,1.824,333,2.608,334,1.824,335,1.376,336,1.824,337,1.824,338,1.824,339,3.044,340,1.824,341,1.824,342,1.824,343,1.824,344,1.824,345,1.824,346,1.824,347,1.824,348,1.824,349,1.824]],["title/modules.html",[196,1.771]],["body/modules.html",[24,0.079,135,0.068,144,0.068,145,0.079,195,1.575,196,1.978,350,3.339,351,3.339,352,3.339]],["title/overview.html",[353,2.254]],["body/overview.html",[2,1.865,24,0.076,113,2.374,135,0.064,144,0.064,145,0.076,194,1.399,203,0.928,211,1.865,224,1.865,228,2.374,280,1.865,327,2.374,353,2.374,354,3.148,355,3.729,356,3.148,357,3.729,358,3.148]],["title/miscellaneous/variables.html",[298,0.884,359,2.005]],["body/miscellaneous/variables.html",[6,0.888,8,0.511,17,1.53,18,0.817,24,0.088,26,0.741,33,1.306,43,2.328,44,2.328,51,0.65,69,1.185,71,0.942,95,0.942,120,1.895,135,0.035,138,1.306,144,0.035,145,0.051,146,0.942,148,1.306,151,1.185,155,1.185,162,1.489,163,1.53,166,1.895,175,1.306,187,1.489,188,1.185,189,1.185,194,1.109,202,1.489,205,1.394,206,1.624,220,2.128,221,1.306,222,0.817,232,1.026,237,1.141,246,1.306,250,1.306,251,1.895,254,1.306,255,1.306,256,1.306,257,1.895,262,1.306,263,1.895,264,1.306,265,1.895,266,2.23,267,1.306,268,1.895,269,1.895,270,1.489,271,1.026,273,1.895,274,1.306,275,2.041,298,0.817,300,1.306,311,1.306,328,1.895,335,1.895,359,1.306,360,1.731,361,1.731,362,1.731,363,1.731,364,1.731,365,1.731,366,1.731,367,1.731,368,1.731,369,1.731,370,1.731,371,1.731,372,3.243,373,1.731,374,1.731,375,1.731,376,1.731,377,2.512,378,2.512,379,2.512,380,2.512,381,2.512,382,2.512,383,1.731,384,1.731]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"interfaces/State.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["0.10.2",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":357,"title":{},"body":{"overview.html":{}}}],["1.10.0",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["1.6.5",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":253,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":252,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":358,"title":{},"body":{"overview.html":{}}}],["3/6",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["6.5.4",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["9.1.1",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":155,"title":{},"body":{"injectables/Effects.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["actionreducer",{"_index":273,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":152,"title":{},"body":{"injectables/Effects.html":{}}}],["add",{"_index":314,"title":{},"body":{"index.html":{}}}],["already",{"_index":234,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["angular",{"_index":200,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"index.html":{}}}],["angular/animations",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":56,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":286,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["appcomponent",{"_index":318,"title":{},"body":{"index.html":{}}}],["application",{"_index":328,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":236,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"index.html":{}}}],["appstate",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{}}}],["artifacts",{"_index":332,"title":{},"body":{"index.html":{}}}],["audience",{"_index":325,"title":{},"body":{"index.html":{}}}],["auth",{"_index":70,"title":{},"body":{"injectables/AuthService.html":{},"modules/NgrxAuth0Module.html":{}}}],["auth.service",{"_index":190,"title":{},"body":{"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{}}}],["auth0",{"_index":51,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["auth0.module.ts",{"_index":198,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["auth0.module.ts:32",{"_index":210,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["auth0/auth0",{"_index":65,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["auth0/src/lib/actions/init.action.ts",{"_index":246,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth0/src/lib/actions/login",{"_index":250,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth0/src/lib/actions/login.action.ts",{"_index":254,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth0/src/lib/actions/logout.action.ts",{"_index":255,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth0/src/lib/auth",{"_index":256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth0/src/lib/auth.service.ts",{"_index":7,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["auth0/src/lib/auth.service.ts:13",{"_index":49,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth0/src/lib/auth.service.ts:15",{"_index":53,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth0/src/lib/auth.service.ts:17",{"_index":22,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth0/src/lib/auth.service.ts:52",{"_index":34,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth0/src/lib/auth.service.ts:62",{"_index":47,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth0/src/lib/auth.service.ts:73",{"_index":29,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth0/src/lib/effects.ts",{"_index":147,"title":{},"body":{"injectables/Effects.html":{},"coverage.html":{}}}],["auth0/src/lib/effects.ts:23",{"_index":165,"title":{},"body":{"injectables/Effects.html":{}}}],["auth0/src/lib/effects.ts:38",{"_index":176,"title":{},"body":{"injectables/Effects.html":{}}}],["auth0/src/lib/effects.ts:44",{"_index":182,"title":{},"body":{"injectables/Effects.html":{}}}],["auth0/src/lib/effects.ts:47",{"_index":153,"title":{},"body":{"injectables/Effects.html":{}}}],["auth0/src/lib/effects.ts:53",{"_index":154,"title":{},"body":{"injectables/Effects.html":{}}}],["auth0/src/lib/feature",{"_index":262,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth0/src/lib/initial",{"_index":264,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth0/src/lib/is",{"_index":267,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth0/src/lib/ngrx",{"_index":197,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["auth0/src/lib/reducer.ts",{"_index":271,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["auth0/src/lib/selector.ts",{"_index":274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth0/src/lib/state.ts",{"_index":239,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{}}}],["auth0](https://auth0.com",{"_index":223,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["auth0client",{"_index":11,"title":{},"body":{"injectables/AuthService.html":{}}}],["authcomplete",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["authcomplete$.subscribe",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":1,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"coverage.html":{}}}],["authservice.isauthenticated",{"_index":169,"title":{},"body":{"injectables/Effects.html":{}}}],["authserviceoptions",{"_index":69,"title":{},"body":{"injectables/AuthService.html":{},"modules/NgrxAuth0Module.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":351,"title":{},"body":{"modules.html":{}}}],["boolean",{"_index":241,"title":{},"body":{"interfaces/State.html":{}}}],["bootstrap",{"_index":327,"title":{},"body":{"index.html":{},"overview.html":{}}}],["browse",{"_index":352,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":287,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["browsermodule",{"_index":317,"title":{},"body":{"index.html":{}}}],["call",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{}}}],["callback",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["catcherror",{"_index":59,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{}}}],["catcherror(err",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{}}}],["cbres.appstate",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["cbres.appstate.target",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["change",{"_index":380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"index.html":{}}}],["client",{"_index":52,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{}}}],["client.logout",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["client_id",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["code",{"_index":337,"title":{},"body":{"index.html":{}}}],["command",{"_index":308,"title":{},"body":{"index.html":{}}}],["complete",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["complete.action.ts",{"_index":251,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["completion",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["component",{"_index":339,"title":{},"body":{"index.html":{}}}],["concatmap",{"_index":60,"title":{},"body":{"injectables/AuthService.html":{}}}],["concatmap((client",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{}}}],["concatmap(client",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{}}}],["configured",{"_index":329,"title":{},"body":{"index.html":{}}}],["const",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{}}}],["constructor(@inject(authserviceoptions",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(options",{"_index":20,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(protected",{"_index":192,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["constructor(store",{"_index":150,"title":{},"body":{"injectables/Effects.html":{}}}],["coverage",{"_index":242,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createaction",{"_index":372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createauth0client",{"_index":64,"title":{},"body":{"injectables/AuthService.html":{}}}],["createauth0client(options",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{}}}],["createeffect",{"_index":156,"title":{},"body":{"injectables/Effects.html":{}}}],["createfeatureselector(featurekey",{"_index":384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreducer",{"_index":369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector",{"_index":374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":224,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":43,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{}}}],["dependencies",{"_index":280,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":315,"title":{},"body":{"index.html":{}}}],["description",{"_index":45,"title":{},"body":{"injectables/AuthService.html":{},"modules/NgrxAuth0Module.html":{},"interfaces/State.html":{}}}],["desired",{"_index":35,"title":{},"body":{"injectables/AuthService.html":{}}}],["devtools",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["dispatch",{"_index":174,"title":{},"body":{"injectables/Effects.html":{}}}],["dispatched",{"_index":377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["domain",{"_index":322,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":40,"title":{},"body":{"injectables/AuthService.html":{}}}],["effect",{"_index":167,"title":{},"body":{"injectables/Effects.html":{}}}],["effects",{"_index":146,"title":{"injectables/Effects.html":{}},"body":{"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["effectsmodule",{"_index":219,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"index.html":{}}}],["effectsmodule.forfeature([effects",{"_index":227,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["effectsmodule.forroot",{"_index":320,"title":{},"body":{"index.html":{}}}],["empty",{"_index":164,"title":{},"body":{"injectables/Effects.html":{}}}],["ensure",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{}}}],["error",{"_index":233,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["example",{"_index":338,"title":{},"body":{"index.html":{}}}],["exists",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"interfaces/State.html":{},"index.html":{}}}],["exports",{"_index":228,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"overview.html":{}}}],["false",{"_index":175,"title":{},"body":{"injectables/Effects.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":206,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"interfaces/State.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["featurekey",{"_index":220,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":342,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"interfaces/State.html":{},"coverage.html":{}}}],["flag",{"_index":376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flow",{"_index":179,"title":{},"body":{"injectables/Effects.html":{},"index.html":{}}}],["following",{"_index":307,"title":{},"body":{"index.html":{}}}],["follows",{"_index":316,"title":{},"body":{"index.html":{}}}],["form",{"_index":204,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"index.html":{}}}],["forroot",{"_index":208,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["forroot(options",{"_index":209,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["from(client.handleredirectcallback",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(client.isauthenticated",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(client.loginwithredirect",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{}}}],["function",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":299,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":302,"title":{"index.html":{}},"body":{}}],["graph",{"_index":350,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":42,"title":{},"body":{"injectables/AuthService.html":{}}}],["handle",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["handleauthcallback",{"_index":16,"title":{},"body":{"injectables/AuthService.html":{}}}],["handleredirectcallback",{"_index":12,"title":{},"body":{"injectables/AuthService.html":{}}}],["identifier",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":340,"title":{},"body":{"index.html":{}}}],["implements",{"_index":191,"title":{},"body":{"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"index.html":{}}}],["import",{"_index":54,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"index.html":{}}}],["imports",{"_index":225,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"index.html":{}}}],["in.selector.ts",{"_index":269,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"interfaces/State.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"interfaces/State.html":{}}}],["init",{"_index":148,"title":{},"body":{"injectables/Effects.html":{},"miscellaneous/variables.html":{}}}],["initaction",{"_index":187,"title":{},"body":{"injectables/Effects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initial",{"_index":373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialstate",{"_index":266,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["initiate",{"_index":335,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["initiation",{"_index":178,"title":{},"body":{"injectables/Effects.html":{}}}],["inject",{"_index":55,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AuthService.html":{},"injectables/Effects.html":{}},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"overview.html":{}}}],["injectiontoken('authserviceoptions",{"_index":371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["install",{"_index":310,"title":{},"body":{"index.html":{}}}],["installation",{"_index":305,"title":{},"body":{"index.html":{}}}],["installed",{"_index":306,"title":{},"body":{"index.html":{}}}],["instance",{"_index":50,"title":{},"body":{"injectables/AuthService.html":{}}}],["interact",{"_index":333,"title":{},"body":{"index.html":{}}}],["interface",{"_index":203,"title":{"interfaces/State.html":{}},"body":{"modules/NgrxAuth0Module.html":{},"interfaces/State.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfaces",{"_index":238,"title":{},"body":{"interfaces/State.html":{}}}],["isauthenticated",{"_index":14,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{}}}],["isloggedin",{"_index":163,"title":{},"body":{"injectables/Effects.html":{},"interfaces/State.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["isloggedinselector",{"_index":270,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["js",{"_index":67,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["js/dist/typings/auth0client",{"_index":68,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":221,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"miscellaneous/variables.html":{}}}],["key.ts",{"_index":263,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":354,"title":{},"body":{"overview.html":{}}}],["loaded",{"_index":235,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["local",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{}}}],["log",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{}}}],["logged",{"_index":268,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":17,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["login(redirectpath",{"_index":32,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginaction",{"_index":188,"title":{},"body":{"injectables/Effects.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["logincomplete",{"_index":171,"title":{},"body":{"injectables/Effects.html":{}}}],["logincompleteaction",{"_index":162,"title":{},"body":{"injectables/Effects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logout",{"_index":18,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["logoutaction",{"_index":189,"title":{},"body":{"injectables/Effects.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["logs",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["map",{"_index":170,"title":{},"body":{"injectables/Effects.html":{}}}],["map(isauthenticated",{"_index":161,"title":{},"body":{"injectables/Effects.html":{}}}],["matching",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"interfaces/State.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mergemap",{"_index":159,"title":{},"body":{"injectables/Effects.html":{}}}],["merges",{"_index":168,"title":{},"body":{"injectables/Effects.html":{}}}],["method",{"_index":39,"title":{},"body":{"injectables/AuthService.html":{}}}],["methods",{"_index":15,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{}}}],["miscellaneous",{"_index":298,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":194,"title":{"modules/NgrxAuth0Module.html":{}},"body":{"modules/NgrxAuth0Module.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":196,"title":{"modules.html":{}},"body":{"modules/NgrxAuth0Module.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":215,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["name",{"_index":25,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":232,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":216,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"index.html":{}}}],["ngrx",{"_index":205,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"interfaces/State.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngrx/effects",{"_index":185,"title":{},"body":{"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"dependencies.html":{},"index.html":{}}}],["ngrx/store",{"_index":186,"title":{},"body":{"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"dependencies.html":{},"index.html":{}}}],["ngrxauth0",{"_index":199,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"index.html":{}}}],["ngrxauth0module",{"_index":195,"title":{"modules/NgrxAuth0Module.html":{}},"body":{"modules/NgrxAuth0Module.html":{},"index.html":{},"modules.html":{}}}],["ngrxauth0module.forroot",{"_index":321,"title":{},"body":{"index.html":{}}}],["ngrxoniniteffects",{"_index":149,"title":{},"body":{"injectables/Effects.html":{}}}],["now",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["npm",{"_index":309,"title":{},"body":{"index.html":{}}}],["observable",{"_index":48,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"index.html":{}}}],["observable).pipe",{"_index":78,"title":{},"body":{"injectables/AuthService.html":{}}}],["oftype",{"_index":183,"title":{},"body":{"injectables/Effects.html":{}}}],["oftype(initaction",{"_index":158,"title":{},"body":{"injectables/Effects.html":{}}}],["oftype(loginaction",{"_index":172,"title":{},"body":{"injectables/Effects.html":{}}}],["oftype(logoutaction",{"_index":180,"title":{},"body":{"injectables/Effects.html":{}}}],["on(logincompleteaction",{"_index":370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["once",{"_index":313,"title":{},"body":{"index.html":{}}}],["oniniteffects",{"_index":184,"title":{},"body":{"injectables/Effects.html":{}}}],["onloginclick",{"_index":346,"title":{},"body":{"index.html":{}}}],["onlogoutclick",{"_index":348,"title":{},"body":{"index.html":{}}}],["optional",{"_index":27,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":28,"title":{},"body":{"injectables/AuthService.html":{},"modules/NgrxAuth0Module.html":{}}}],["options.ts",{"_index":257,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"overview.html":{}}}],["overview",{"_index":353,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":279,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{},"modules/NgrxAuth0Module.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{}}}],["params.includes('code",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["params.includes('state",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["parentmodule",{"_index":230,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["passed",{"_index":38,"title":{},"body":{"injectables/AuthService.html":{}}}],["path",{"_index":37,"title":{},"body":{"injectables/AuthService.html":{}}}],["processed",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["processing",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["produce",{"_index":379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../auth",{"_index":360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../feature",{"_index":361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../init.action.ts",{"_index":362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../initial",{"_index":363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../is",{"_index":364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../login",{"_index":366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../login.action.ts",{"_index":365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../logout.action.ts",{"_index":367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../reducer.ts",{"_index":300,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../selector.ts",{"_index":368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/yeiniel/ngrx",{"_index":6,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":9,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"interfaces/State.html":{}}}],["props",{"_index":383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protected",{"_index":10,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{}}}],["provide",{"_index":201,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["providers",{"_index":211,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":304,"title":{},"body":{"index.html":{}}}],["public",{"_index":13,"title":{},"body":{"injectables/AuthService.html":{}}}],["receives",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirect",{"_index":36,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirect_uri",{"_index":103,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["redirecting",{"_index":336,"title":{},"body":{"index.html":{}}}],["redirectpath",{"_index":46,"title":{},"body":{"injectables/AuthService.html":{}}}],["reducer",{"_index":222,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reducer(state",{"_index":301,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reloads",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":356,"title":{},"body":{"overview.html":{}}}],["response",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["result",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"interfaces/State.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"interfaces/State.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":193,"title":{},"body":{"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{}}}],["returns",{"_index":30,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{}}}],["returnto",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{}}}],["root",{"_index":214,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"index.html":{}}}],["route",{"_index":41,"title":{},"body":{"injectables/AuthService.html":{}}}],["rxjs",{"_index":58,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"dependencies.html":{},"index.html":{}}}],["rxjs/operators",{"_index":63,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{}}}],["same",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveusage",{"_index":312,"title":{},"body":{"index.html":{}}}],["select",{"_index":334,"title":{},"body":{"index.html":{}}}],["selector",{"_index":275,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":71,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["setup",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{}}}],["sharereplay",{"_index":61,"title":{},"body":{"injectables/AuthService.html":{}}}],["sharereplay(1",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{}}}],["side",{"_index":166,"title":{},"body":{"injectables/Effects.html":{},"miscellaneous/variables.html":{}}}],["skipself",{"_index":217,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"interfaces/State.html":{}}}],["spa",{"_index":66,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["specification",{"_index":240,"title":{},"body":{"interfaces/State.html":{}}}],["started",{"_index":303,"title":{"index.html":{}},"body":{}}],["state",{"_index":237,"title":{"interfaces/State.html":{}},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["state.isloggedin",{"_index":375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.ts",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":245,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":207,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["status",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{}}}],["store",{"_index":151,"title":{},"body":{"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storemodule",{"_index":218,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"index.html":{}}}],["storemodule.forfeature(featurekey",{"_index":226,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["storemodule.forroot",{"_index":319,"title":{},"body":{"index.html":{}}}],["string",{"_index":33,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["subscribe",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribing",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscription",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{}}}],["suitable",{"_index":212,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["table",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":62,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{}}}],["tap(cbres",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["target",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{}}}],["targetroute",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["template",{"_index":343,"title":{},"body":{"index.html":{}}}],["this.actions$.pipe",{"_index":157,"title":{},"body":{"injectables/Effects.html":{}}}],["this.auth0client",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth0client$.pipe",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth0client$.subscribe((client",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.isauthenticated$.pipe",{"_index":160,"title":{},"body":{"injectables/Effects.html":{}}}],["this.authservice.login",{"_index":173,"title":{},"body":{"injectables/Effects.html":{}}}],["this.authservice.logout",{"_index":181,"title":{},"body":{"injectables/Effects.html":{}}}],["this.handleauthcallback",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.handleredirectcallback",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.handleredirectcallback$.pipe",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isauthenticated",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isauthenticated$.subscribe",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedin",{"_index":344,"title":{},"body":{"index.html":{}}}],["this.options.client_id",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.store.dispatch(loginaction",{"_index":347,"title":{},"body":{"index.html":{}}}],["this.store.dispatch(logoutaction",{"_index":349,"title":{},"body":{"index.html":{}}}],["this.store.select(isloggedinselector",{"_index":345,"title":{},"body":{"index.html":{}}}],["throw",{"_index":231,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["throwerror",{"_index":57,"title":{},"body":{"injectables/AuthService.html":{}}}],["throwerror(err",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{}}}],["tree",{"_index":331,"title":{},"body":{"index.html":{}}}],["trigger",{"_index":382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["triggers",{"_index":177,"title":{},"body":{"injectables/Effects.html":{}}}],["tslib",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":26,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"modules/NgrxAuth0Module.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":341,"title":{},"body":{"index.html":{}}}],["use",{"_index":330,"title":{},"body":{"index.html":{}}}],["used",{"_index":213,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"index.html":{}}}],["user",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":229,"title":{},"body":{"modules/NgrxAuth0Module.html":{}}}],["using",{"_index":202,"title":{},"body":{"modules/NgrxAuth0Module.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":44,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Effects.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":247,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":359,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":31,"title":{},"body":{"injectables/AuthService.html":{}}}],["window.location.assign(targetroute",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["window.location.origin",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["window.location.search",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["workflow",{"_index":378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xxxx.auth0.com",{"_index":323,"title":{},"body":{"index.html":{}}}],["yeiniel/ngrx",{"_index":311,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["yyyyyyyy",{"_index":324,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":355,"title":{},"body":{"overview.html":{}}}],["zzzzzzzzzzz",{"_index":326,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/yeiniel/ngrx-auth0/src/lib/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                auth0Client$\n                            \n                            \n                                    Protected\n                                handleRedirectCallback$\n                            \n                            \n                                    Public\n                                isAuthenticated$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                handleAuthCallback\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: any)\n                    \n                \n                        \n                            \n                                Defined in projects/yeiniel/ngrx-auth0/src/lib/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleAuthCallback\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleAuthCallback()\n                \n            \n\n\n            \n                \n                    Defined in projects/yeiniel/ngrx-auth0/src/lib/auth.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(redirectPath: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/yeiniel/ngrx-auth0/src/lib/auth.service.ts:52\n                \n            \n\n\n            \n                \n                    Login\nA desired redirect path can be passed to login method (e.g., from a route\nguard).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    redirectPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '/'\n                                    \n\n                                    \n                                        A desired redirect path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in projects/yeiniel/ngrx-auth0/src/lib/auth.service.ts:62\n                \n            \n\n\n            \n                \n                    Logout \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            auth0Client$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/yeiniel/ngrx-auth0/src/lib/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                        instance of Auth0 client \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            handleRedirectCallback$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/yeiniel/ngrx-auth0/src/lib/auth.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAuthenticated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/yeiniel/ngrx-auth0/src/lib/auth.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { from, Observable, throwError } from 'rxjs';\nimport { catchError, concatMap, shareReplay, tap } from 'rxjs/operators';\nimport createAuth0Client from '@auth0/auth0-spa-js';\nimport Auth0Client from '@auth0/auth0-spa-js/dist/typings/Auth0Client';\n\nimport { AuthServiceOptions } from './auth-service-options';\n\n@Injectable()\nexport class AuthService {\n\n  /** instance of Auth0 client */\n  protected auth0Client$: Observable;\n\n  protected handleRedirectCallback$: Observable;\n\n  public isAuthenticated$: Observable;\n\n  constructor(@Inject(AuthServiceOptions) protected options: any) {\n\n    // setup the auth0 client\n    this.auth0Client$ = (from(\n      createAuth0Client(options)\n    ) as Observable).pipe(\n      shareReplay(1), // Every subscription receives the same shared value\n      catchError(err => throwError(err))\n    );\n\n    this.handleRedirectCallback$ = this.auth0Client$.pipe(\n      concatMap((client: Auth0Client) => from(client.handleRedirectCallback()))\n    );\n\n    // setup the isAuthenticated$ observable\n    this.isAuthenticated$ = this.auth0Client$.pipe(\n      concatMap(client => from(client.isAuthenticated()))\n    );\n\n    // // check local authentication status by subscribing to isAuthenticated$\n    // this.isAuthenticated$.subscribe();\n\n    // handle redirect from Auth0 login\n    this.handleAuthCallback();\n  }\n\n  /** Login\n   *\n   * A desired redirect path can be passed to login method (e.g., from a route\n   * guard).\n   *\n   * @param redirectPath A desired redirect path\n   */\n  public login(redirectPath: string = '/'): void {\n    this.auth0Client$.pipe(\n      concatMap(client => from(client.loginWithRedirect({\n        redirect_uri: `${window.location.origin}`,\n        appState: { target: redirectPath }\n      })))\n    ).subscribe();\n  }\n\n  /** Logout */\n  public logout() {\n    // Ensure Auth0 client instance exists\n    this.auth0Client$.subscribe((client: Auth0Client) => {\n      // Call method to log out\n      client.logout({\n        client_id: this.options.client_id,\n        returnTo: `${window.location.origin}`\n      });\n    });\n  }\n\n  protected handleAuthCallback() {\n    // Call when app reloads after user logs in with Auth0\n    const params = window.location.search;\n    if (params.includes('code=') && params.includes('state=')) {\n      let targetRoute: string; // Path to redirect to after login processed\n      const authComplete$ = this.handleRedirectCallback$.pipe(\n        // Have client, now call method to handle auth callback redirect\n        tap(cbRes => {\n          // Get and set target redirect route from callback results\n          targetRoute = cbRes.appState && cbRes.appState.target ? cbRes.appState.target : '/';\n        }),\n        concatMap(() =>\n          // Redirect callback complete; get login status\n          this.isAuthenticated$\n        )\n      );\n\n      // Subscribe to authentication completion observable\n      // Response will be login status\n      authComplete$.subscribe(() => {\n        // Redirect to target route after callback processing\n        window.location.assign(targetRoute);\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Effects.html":{"url":"injectables/Effects.html","title":"injectable - Effects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Effects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/yeiniel/ngrx-auth0/src/lib/effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                init$\n                            \n                            \n                                login$\n                            \n                            \n                                logout$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngrxOnInitEffects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in projects/yeiniel/ngrx-auth0/src/lib/effects.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngrxOnInitEffects\n                        \n                        \n                    \n                \n            \n            \n                \nngrxOnInitEffects()\n                \n            \n\n\n            \n                \n                    Defined in projects/yeiniel/ngrx-auth0/src/lib/effects.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Action\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actions$.pipe(\n    ofType(initAction),\n    mergeMap(() => this.authService.isAuthenticated$.pipe(\n      map(isAuthenticated => loginCompleteAction({\n        isLoggedIn: isAuthenticated\n      })),\n      catchError(() => EMPTY)\n    ))\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/yeiniel/ngrx-auth0/src/lib/effects.ts:23\n                            \n                        \n\n                \n                    \n                        Side effect for the init action\nIt merges the AuthService.isAuthenticated$ observable and map it into the\nloginComplete Action.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actions$.pipe(\n    ofType(loginAction),\n    tap(() => this.authService.login())\n  ), { dispatch: false })\n                        \n                    \n                        \n                            \n                                    Defined in projects/yeiniel/ngrx-auth0/src/lib/effects.ts:38\n                            \n                        \n\n                \n                    \n                        Side effect for the Login action\nIt triggers the initiation of the authentication flow by the Auth0 client\nservice.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actions$.pipe(\n    ofType(logoutAction),\n    tap(() => this.authService.logout())\n  ), { dispatch: false })\n                        \n                    \n                        \n                            \n                                    Defined in projects/yeiniel/ngrx-auth0/src/lib/effects.ts:44\n                            \n                        \n\n                \n                    \n                        Side effect for the Logout action \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType, OnInitEffects } from '@ngrx/effects';\nimport { catchError, map, mergeMap, tap } from 'rxjs/operators';\nimport { Action, Store } from '@ngrx/store';\nimport { EMPTY } from \"rxjs\";\n\nimport {\n  initAction,\n  loginAction,\n  loginCompleteAction,\n  logoutAction\n} from './actions';\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class Effects implements OnInitEffects {\n\n  /** Side effect for the init action\n   *\n   * It merges the AuthService.isAuthenticated$ observable and map it into the\n   * loginComplete Action.\n   */\n  init$ = createEffect(() => this.actions$.pipe(\n    ofType(initAction),\n    mergeMap(() => this.authService.isAuthenticated$.pipe(\n      map(isAuthenticated => loginCompleteAction({\n        isLoggedIn: isAuthenticated\n      })),\n      catchError(() => EMPTY)\n    ))\n  ));\n\n  /** Side effect for the Login action\n   *\n   * It triggers the initiation of the authentication flow by the Auth0 client\n   * service.\n   */\n  login$ = createEffect(() => this.actions$.pipe(\n    ofType(loginAction),\n    tap(() => this.authService.login())\n  ), { dispatch: false });\n\n  /** Side effect for the Logout action */\n  logout$ = createEffect(() => this.actions$.pipe(\n    ofType(logoutAction),\n    tap(() => this.authService.logout())\n  ), { dispatch: false });\n\n  constructor(protected store: Store,\n              protected actions$: Actions,\n              protected authService: AuthService) {}\n\n  ngrxOnInitEffects(): Action {\n    return initAction();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgrxAuth0Module.html":{"url":"modules/NgrxAuth0Module.html","title":"module - NgrxAuth0Module","body":"\n                   \n\n\n\n\n    Modules\n    NgrxAuth0Module\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/yeiniel/ngrx-auth0/src/lib/ngrx-auth0.module.ts\n        \n\n\n        \n            Description\n        \n        \n            NgrxAuth0 Angular Module\nProvide authentication using Auth0 and implements its\ninterface in the form of an NgRx store feature.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/yeiniel/ngrx-auth0/src/lib/ngrx-auth0.module.ts:32\n                \n            \n\n\n            \n                \n                    NgrxAuth0Module with Providers\nSuitable to be used as root module import.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { featureKey } from './feature-key';\nimport { reducer } from './reducer';\nimport { Effects } from './effects';\nimport { AuthService } from './auth.service';\nimport { AuthServiceOptions } from './auth-service-options';\n\n/** NgrxAuth0 Angular Module\n *\n * Provide authentication using [Auth0](https://auth0.com) and implements its\n * interface in the form of an NgRx store feature.\n */\n@NgModule({\n  declarations: [],\n  imports: [\n    StoreModule.forFeature(featureKey, reducer),\n    EffectsModule.forFeature([Effects])\n  ],\n  exports: []\n})\nexport class NgrxAuth0Module {\n\n  /** NgrxAuth0Module with Providers\n   *\n   * Suitable to be used as root module import.\n   *\n   * @param options\n   */\n  static forRoot(options: any): ModuleWithProviders {\n    return {\n      ngModule: NgrxAuth0Module,\n      providers: [\n        { provide: AuthServiceOptions, useValue: options },\n       AuthService\n      ]\n    }\n  }\n\n  constructor (@Optional() @SkipSelf() parentModule?: NgrxAuth0Module) {\n    if (parentModule) {\n      throw new Error(\n        'NgrxAuth0Module is already loaded. Import it in the AppModule only');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/yeiniel/ngrx-auth0/src/lib/state.ts\n        \n\n            \n                Description\n            \n            \n                NgRx feature state specification \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isLoggedIn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isLoggedIn\n                                    \n                                \n                                \n                                    \n                                        isLoggedIn:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface State {\n  isLoggedIn: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/yeiniel/ngrx-auth0/src/lib/actions/init.action.ts\n            \n            variable\n            initAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/yeiniel/ngrx-auth0/src/lib/actions/login-complete.action.ts\n            \n            variable\n            loginCompleteAction\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/yeiniel/ngrx-auth0/src/lib/actions/login.action.ts\n            \n            variable\n            loginAction\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/yeiniel/ngrx-auth0/src/lib/actions/logout.action.ts\n            \n            variable\n            logoutAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/yeiniel/ngrx-auth0/src/lib/auth-service-options.ts\n            \n            variable\n            AuthServiceOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/yeiniel/ngrx-auth0/src/lib/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                projects/yeiniel/ngrx-auth0/src/lib/effects.ts\n            \n            injectable\n            Effects\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                projects/yeiniel/ngrx-auth0/src/lib/feature-key.ts\n            \n            variable\n            featureKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/yeiniel/ngrx-auth0/src/lib/initial-state.ts\n            \n            variable\n            initialState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/yeiniel/ngrx-auth0/src/lib/is-logged-in.selector.ts\n            \n            variable\n            isLoggedInSelector\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/yeiniel/ngrx-auth0/src/lib/reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/yeiniel/ngrx-auth0/src/lib/reducer.ts\n            \n            variable\n            actionReducer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/yeiniel/ngrx-auth0/src/lib/selector.ts\n            \n            variable\n            selector\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/yeiniel/ngrx-auth0/src/lib/state.ts\n            \n            interface\n            State\n            \n                50 %\n                (1/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.1\n        \n            @angular/common : ~9.1.1\n        \n            @angular/compiler : ~9.1.1\n        \n            @angular/core : ~9.1.1\n        \n            @angular/forms : ~9.1.1\n        \n            @angular/platform-browser : ~9.1.1\n        \n            @angular/platform-browser-dynamic : ~9.1.1\n        \n            @angular/router : ~9.1.1\n        \n            @auth0/auth0-spa-js : ^1.6.5\n        \n            @ngrx/effects : ^9.1.0\n        \n            @ngrx/store : ^9.1.0\n        \n            @ngrx/store-devtools : ^9.1.0\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            reducer   (projects/.../reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/yeiniel/ngrx-auth0/src/lib/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgrxAuth0\nNgrxAuth0 is an Angular module that provides \nauthentication using Auth0 and implements its interface in \nthe form of an NgRx store feature.\nInstallation\nThe module can be installed using the following command:\nnpm install @yeiniel/ngrx-auth0 --saveUsage\nOnce the module has been installed you can add it as a dependency of the app \nmodule as follows:\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { NgrxAuth0Module } from '@yeiniel/ngrx-auth0';\nimport { EffectsModule } from '@ngrx/effects';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n\n    StoreModule.forRoot({}, {}),\n    EffectsModule.forRoot(),\n    NgrxAuth0Module.forRoot({\n      domain: 'xxxx.auth0.com',\n      client_id: 'yyyyyyyy',\n      redirect_uri: `${window.location.origin}`,\n      audience: 'zzzzzzzzzzz'\n    })\n  ],\n  providers: [],\n  bootstrap: [...]\n})\nexport class AppModule { }Once the application has been configured to use the module there are tree \nartifacts that can be used to interact with it:\n\nthe isLoggedIn selector used to select the login state from the store\nthe login action used to initiate the login flow and redirecting to \nAuth0.\nthe logout action\n\nThe following code is an example of a component that implement the UI used to\ninteract with the module features:\nimport { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { loginAction, logoutAction, isLoggedInSelector } from '@yeiniel/ngrx-auth0';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    \n      login\n      logout\n    \n  `\n})\nexport class AppComponent {\n\n  isLoggedIn$: Observable;\n\n  constructor(protected store: Store) {\n    this.isLoggedIn$ = this.store.select(isLoggedInSelector);\n  }\n\n  onLoginClick() {\n    this.store.dispatch(loginAction());\n  }\n\n  onLogoutClick() {\n    this.store.dispatch(logoutAction());\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgrxAuth0Module\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            actionReducer   (projects/.../reducer.ts)\n                        \n                        \n                            AuthServiceOptions   (projects/.../auth-service-options.ts)\n                        \n                        \n                            featureKey   (projects/.../feature-key.ts)\n                        \n                        \n                            initAction   (projects/.../init.action.ts)\n                        \n                        \n                            initialState   (projects/.../initial-state.ts)\n                        \n                        \n                            isLoggedInSelector   (projects/.../is-logged-in.selector.ts)\n                        \n                        \n                            loginAction   (projects/.../login.action.ts)\n                        \n                        \n                            loginCompleteAction   (projects/.../login-complete.action.ts)\n                        \n                        \n                            logoutAction   (projects/.../logout.action.ts)\n                        \n                        \n                            selector   (projects/.../selector.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/yeiniel/ngrx-auth0/src/lib/reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            actionReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n  initialState,\n  on(loginCompleteAction,\n    (state, { isLoggedIn }) => ({ ...state, isLoggedIn }))\n)\n                        \n                    \n\n                \n                    \n                        NgRx Store reducer for the module feature \n\n                    \n                \n\n            \n        \n\n    projects/yeiniel/ngrx-auth0/src/lib/auth-service-options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthServiceOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('AuthServiceOptions')\n                        \n                    \n\n\n            \n        \n\n    projects/yeiniel/ngrx-auth0/src/lib/feature-key.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            featureKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '@yeiniel/ngrx-auth0'\n                        \n                    \n\n                \n                    \n                        Feature key for NgRx Store feature \n\n                    \n                \n\n            \n        \n\n    projects/yeiniel/ngrx-auth0/src/lib/actions/init.action.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  `[${featureKey}] Init`\n)\n                        \n                    \n\n\n            \n        \n\n    projects/yeiniel/ngrx-auth0/src/lib/initial-state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         State\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  isLoggedIn: false\n}\n                        \n                    \n\n                \n                    \n                        Initial NgRx feature state \n\n                    \n                \n\n            \n        \n\n    projects/yeiniel/ngrx-auth0/src/lib/is-logged-in.selector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedInSelector\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selector,\n  (state: State) => state.isLoggedIn\n)\n                        \n                    \n\n                \n                    \n                        isLoggedIn flag selector \n\n                    \n                \n\n            \n        \n\n    projects/yeiniel/ngrx-auth0/src/lib/actions/login.action.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loginAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  `[${featureKey}] Login`\n)\n                        \n                    \n\n                \n                    \n                        Login\nThis action is dispatched by the application using this module to initiate\nthe user authentication workflow.\nIt does not produce any change on the stored state but it trigger side\neffects.\n\n                    \n                \n\n            \n        \n\n    projects/yeiniel/ngrx-auth0/src/lib/actions/login-complete.action.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loginCompleteAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  `[${featureKey}] Login Complete`,\n  props()\n)\n                        \n                    \n\n                \n                    \n                        Login\nThis action is dispatched by the application using this module to initiate\nthe user authentication workflow.\nIt does not produce any change on the stored state but it trigger side\neffects.\n\n                    \n                \n\n            \n        \n\n    projects/yeiniel/ngrx-auth0/src/lib/actions/logout.action.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logoutAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  `[${featureKey}] Logout`\n)\n                        \n                    \n\n\n            \n        \n\n    projects/yeiniel/ngrx-auth0/src/lib/selector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selector\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector(featureKey)\n                        \n                    \n\n                \n                    \n                        State feature selector \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
